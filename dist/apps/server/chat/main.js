(()=>{"use strict";var e=[,e=>{e.exports=require("@nestjs/common")},e=>{e.exports=require("@nestjs/core")},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AppModule=void 0;const a=o(4),r=o(1),n=o(5),s=o(12),i=o(13),d=o(23),l=o(7),_=o(8),c=o(10),p=o(11),u=o(9),v=o(33);let m=class AppModule{};t.AppModule=m,t.AppModule=m=a.__decorate([(0,r.Module)({imports:[s.SequelizeModule.forRoot({dialect:"postgres",host:process.env.POSTGRES_HOST,port:+process.env.POSTGRES_PORT,username:process.env.POSTGRES_USERNAME,password:process.env.POSTGRES_PASSWORD,database:process.env.POSTGRES_DB,models:[n.Message,l.Profile,_.Conversation,c.Account,u.UserConversation,p.Friend],autoLoadModels:!0,synchronize:!0}),i.ChannelModule,d.MessageModule,v.ConversationModule],controllers:[],providers:[]})],m)},e=>{e.exports=require("tslib")},(e,t,o)=>{var a,r;Object.defineProperty(t,"__esModule",{value:!0}),t.Message=void 0;const n=o(4),s=o(6),i=o(7),d=o(8);let l=class Message extends s.Model{};t.Message=l,n.__decorate([s.PrimaryKey,s.AutoIncrement,s.Column,n.__metadata("design:type",Number)],l.prototype,"id",void 0),n.__decorate([(0,s.ForeignKey)((()=>d.Conversation)),s.Column,n.__metadata("design:type",Number)],l.prototype,"conversationId",void 0),n.__decorate([(0,s.ForeignKey)((()=>i.Profile)),s.Column,n.__metadata("design:type",Number)],l.prototype,"senderId",void 0),n.__decorate([s.Column,n.__metadata("design:type",String)],l.prototype,"content",void 0),n.__decorate([(0,s.Column)({defaultValue:"TEXT"}),n.__metadata("design:type",String)],l.prototype,"messageType",void 0),n.__decorate([(0,s.Column)({type:s.DataType.DATE,defaultValue:s.DataType.NOW}),n.__metadata("design:type","function"==typeof(a="undefined"!=typeof Date&&Date)?a:Object)],l.prototype,"createdAt",void 0),n.__decorate([(0,s.Column)({type:s.DataType.DATE,defaultValue:s.DataType.NOW}),n.__metadata("design:type","function"==typeof(r="undefined"!=typeof Date&&Date)?r:Object)],l.prototype,"updatedAt",void 0),t.Message=l=n.__decorate([(0,s.Table)({tableName:"message",timestamps:!0})],l)},e=>{e.exports=require("sequelize-typescript")},(e,t,o)=>{var a,r,n,s;Object.defineProperty(t,"__esModule",{value:!0}),t.Profile=void 0;const i=o(4),d=o(6),l=o(8),_=o(10),c=o(9),p=o(11);let u=class Profile extends d.Model{};t.Profile=u,i.__decorate([d.PrimaryKey,d.AutoIncrement,d.Column,i.__metadata("design:type",Number)],u.prototype,"id",void 0),i.__decorate([(0,d.ForeignKey)((()=>_.Account)),d.Column,i.__metadata("design:type",Number)],u.prototype,"accountId",void 0),i.__decorate([(0,d.BelongsTo)((()=>_.Account)),i.__metadata("design:type","function"==typeof(a=void 0!==_.Account&&_.Account)?a:Object)],u.prototype,"account",void 0),i.__decorate([(0,d.BelongsToMany)((()=>l.Conversation),(()=>c.UserConversation)),i.__metadata("design:type",Array)],u.prototype,"conversations",void 0),i.__decorate([d.Column,i.__metadata("design:type",String)],u.prototype,"fullName",void 0),i.__decorate([d.Column,i.__metadata("design:type",String)],u.prototype,"avatarUrl",void 0),i.__decorate([d.Column,i.__metadata("design:type",String)],u.prototype,"bio",void 0),i.__decorate([(0,d.Column)({type:d.DataType.DATE,defaultValue:null}),i.__metadata("design:type","function"==typeof(r="undefined"!=typeof Date&&Date)?r:Object)],u.prototype,"dob",void 0),i.__decorate([(0,d.Column)({type:d.DataType.DATE,defaultValue:d.DataType.NOW}),i.__metadata("design:type","function"==typeof(n="undefined"!=typeof Date&&Date)?n:Object)],u.prototype,"createdAt",void 0),i.__decorate([(0,d.Column)({type:d.DataType.DATE,defaultValue:d.DataType.NOW}),i.__metadata("design:type","function"==typeof(s="undefined"!=typeof Date&&Date)?s:Object)],u.prototype,"updatedAt",void 0),i.__decorate([(0,d.BelongsToMany)((()=>u),(()=>p.Friend),"profileId","friendId"),i.__metadata("design:type",Array)],u.prototype,"friends",void 0),t.Profile=u=i.__decorate([(0,d.Table)({tableName:"profile"})],u)},(e,t,o)=>{var a,r;Object.defineProperty(t,"__esModule",{value:!0}),t.Conversation=void 0;const n=o(4),s=o(6),i=o(7),d=o(9);let l=class Conversation extends s.Model{};t.Conversation=l,n.__decorate([s.AutoIncrement,s.PrimaryKey,s.Column,n.__metadata("design:type",Number)],l.prototype,"id",void 0),n.__decorate([s.Column,n.__metadata("design:type",String)],l.prototype,"name",void 0),n.__decorate([(0,s.Column)({defaultValue:!1}),n.__metadata("design:type",Boolean)],l.prototype,"isGroup",void 0),n.__decorate([(0,s.BelongsToMany)((()=>i.Profile),(()=>d.UserConversation)),n.__metadata("design:type",Array)],l.prototype,"members",void 0),n.__decorate([(0,s.Column)({type:s.DataType.DATE,defaultValue:s.DataType.NOW}),n.__metadata("design:type","function"==typeof(a="undefined"!=typeof Date&&Date)?a:Object)],l.prototype,"createdAt",void 0),n.__decorate([(0,s.Column)({type:s.DataType.DATE,defaultValue:s.DataType.NOW}),n.__metadata("design:type","function"==typeof(r="undefined"!=typeof Date&&Date)?r:Object)],l.prototype,"updatedAt",void 0),t.Conversation=l=n.__decorate([(0,s.Table)({tableName:"conversation"})],l)},(e,t,o)=>{var a;Object.defineProperty(t,"__esModule",{value:!0}),t.UserConversation=void 0;const r=o(4),n=o(6),s=o(8),i=o(7);let d=class UserConversation extends n.Model{};t.UserConversation=d,r.__decorate([(0,n.ForeignKey)((()=>s.Conversation)),(0,n.Column)({field:"conversationId"}),r.__metadata("design:type",Number)],d.prototype,"conversationId",void 0),r.__decorate([(0,n.ForeignKey)((()=>i.Profile)),(0,n.Column)({field:"userId"}),r.__metadata("design:type",Number)],d.prototype,"userId",void 0),r.__decorate([(0,n.Column)({defaultValue:n.DataType.NOW}),r.__metadata("design:type","function"==typeof(a="undefined"!=typeof Date&&Date)?a:Object)],d.prototype,"joinedAt",void 0),t.UserConversation=d=r.__decorate([(0,n.Table)({tableName:"conversation_members"})],d)},(e,t,o)=>{var a,r;Object.defineProperty(t,"__esModule",{value:!0}),t.Account=void 0;const n=o(4),s=o(6),i=o(7);let d=class Account extends s.Model{};t.Account=d,n.__decorate([s.PrimaryKey,s.AutoIncrement,s.Column,n.__metadata("design:type",Number)],d.prototype,"id",void 0),n.__decorate([(0,s.HasMany)((()=>i.Profile)),n.__metadata("design:type",Array)],d.prototype,"profiles",void 0),n.__decorate([s.Column,n.__metadata("design:type",String)],d.prototype,"username",void 0),n.__decorate([s.Column,n.__metadata("design:type",String)],d.prototype,"password",void 0),n.__decorate([(0,s.Column)({type:s.DataType.DATE,defaultValue:s.DataType.NOW}),n.__metadata("design:type","function"==typeof(a="undefined"!=typeof Date&&Date)?a:Object)],d.prototype,"createdAt",void 0),n.__decorate([(0,s.Column)({type:s.DataType.DATE,defaultValue:s.DataType.NOW}),n.__metadata("design:type","function"==typeof(r="undefined"!=typeof Date&&Date)?r:Object)],d.prototype,"updatedAt",void 0),t.Account=d=n.__decorate([(0,s.Table)({tableName:"account"})],d)},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Friend=void 0;const a=o(4),r=o(6),n=o(7);let s=class Friend extends r.Model{};t.Friend=s,a.__decorate([(0,r.ForeignKey)((()=>n.Profile)),r.Column,a.__metadata("design:type",Number)],s.prototype,"profileId",void 0),a.__decorate([(0,r.ForeignKey)((()=>n.Profile)),r.Column,a.__metadata("design:type",Number)],s.prototype,"friendId",void 0),a.__decorate([(0,r.Column)({type:r.DataType.BOOLEAN,defaultValue:!1}),a.__metadata("design:type",Boolean)],s.prototype,"isBestFriend",void 0),t.Friend=s=a.__decorate([(0,r.Table)({tableName:"friend"})],s)},e=>{e.exports=require("@nestjs/sequelize")},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ChannelModule=void 0;const a=o(4),r=o(1),n=o(14),s=o(15),i=o(7),d=o(8),l=o(10),_=o(11),c=o(9),p=o(5),u=o(12);let v=class ChannelModule{};t.ChannelModule=v,t.ChannelModule=v=a.__decorate([(0,r.Module)({imports:[u.SequelizeModule.forFeature([p.Message,_.Friend,i.Profile,d.Conversation,l.Account,c.UserConversation])],providers:[n.ChannelService],controllers:[s.ChannelController]})],v)},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ChannelService=void 0;const a=o(4),r=o(1);let n=class ChannelService{create(){console.log("create")}join(){console.log("join")}leave(){console.log("leave")}};t.ChannelService=n,t.ChannelService=n=a.__decorate([(0,r.Injectable)()],n)},(e,t,o)=>{var a;Object.defineProperty(t,"__esModule",{value:!0}),t.ChannelController=void 0;const r=o(4),n=o(1),s=o(16),i=o(17),d=o(14);let l=class ChannelController{constructor(e){this.service=e}create(){return this.service.create()}join(){return this.service.join()}leave(){return this.service.leave()}};t.ChannelController=l,r.__decorate([(0,s.MessagePattern)(i.MESSAGE_PATTERN_CHANNEL.JOIN),r.__metadata("design:type",Function),r.__metadata("design:paramtypes",[]),r.__metadata("design:returntype",void 0)],l.prototype,"create",null),r.__decorate([(0,s.MessagePattern)(i.MESSAGE_PATTERN_CHANNEL.JOIN),r.__metadata("design:type",Function),r.__metadata("design:paramtypes",[]),r.__metadata("design:returntype",void 0)],l.prototype,"join",null),r.__decorate([(0,s.MessagePattern)(i.MESSAGE_PATTERN_CHANNEL.JOIN),r.__metadata("design:type",Function),r.__metadata("design:paramtypes",[]),r.__metadata("design:returntype",void 0)],l.prototype,"leave",null),t.ChannelController=l=r.__decorate([(0,n.Controller)(),r.__metadata("design:paramtypes",["function"==typeof(a=void 0!==d.ChannelService&&d.ChannelService)?a:Object])],l)},e=>{e.exports=require("@nestjs/microservices")},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});const a=o(4);a.__exportStar(o(18),t),a.__exportStar(o(21),t),a.__exportStar(o(20),t)},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});o(4).__exportStar(o(19),t)},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MESSAGE_PATTERN_PROFILE=t.MESSAGE_PATTERN_AUTH=void 0;const a=o(20),r=Object.freeze({AUTH:`${a.MICRO_SERVICE_NAMES.AUTH_SERVICE}/AUTH_MODULE`,PROFILE:`${a.MICRO_SERVICE_NAMES.AUTH_SERVICE}/PROFILE_MODULE`});t.MESSAGE_PATTERN_AUTH=Object.freeze({CREATE:`${r.AUTH}/create`,UPDATE:`${r.AUTH}/update`,DELETE:`${r.AUTH}/delete`,SIGN_IN:`${r.AUTH}/sign-in`,REFRESH_TOKEN:`${r.AUTH}/refresh-token`}),t.MESSAGE_PATTERN_PROFILE=Object.freeze({UPDATE:`${r.PROFILE}/update`,ADD_FRIEND:`${r.PROFILE}/add-friend`,SEARCH_FRIEND:`${r.PROFILE}/search-friend`,GET_USER_FRIENDS:`${r.PROFILE}/get-user-friend`})},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MICRO_SERVICE_NAMES=void 0,t.MICRO_SERVICE_NAMES=Object.freeze({AUTH_SERVICE:"AUTH_SERVICE",CHAT_SERVICE:"CHAT_SERVICE"})},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});o(4).__exportStar(o(22),t)},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MESSAGE_PATTERN_CHANNEL=t.MESSAGE_PATTERN_CONVERSATION=t.MESSAGE_PATTERN_CHAT=void 0;const a=o(20),r=Object.freeze({CHAT:`${a.MICRO_SERVICE_NAMES.CHAT_SERVICE}/CHAT_MODULE`,CHANNEL:`${a.MICRO_SERVICE_NAMES.CHAT_SERVICE}/CHANNEL_MODULE`,CONVERSATION:`${a.MICRO_SERVICE_NAMES.CHAT_SERVICE}/CONVERSATION_MODULE`});t.MESSAGE_PATTERN_CHAT=Object.freeze({SEND_MESSAGE:`${r.CHAT}/send-message`,DELETE:`${r.CHAT}/delete`,PAGING:`${r.CHAT}/paging`,INTERACTION:`${r.CHAT}/interaction`}),t.MESSAGE_PATTERN_CONVERSATION=Object.freeze({CREATE:`${r.CONVERSATION}/create`,DELETE:`${r.CONVERSATION}/delete`,PAGING:`${r.CONVERSATION}/paging`,PAGING_MESSAGE:`${r.CONVERSATION}/pagingMessage`}),t.MESSAGE_PATTERN_CHANNEL=Object.freeze({CREATE:`${r.CHANNEL}/create`,JOIN:`${r.CHANNEL}/join`,LEAVE:`${r.CHANNEL}/leave`})},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MessageModule=void 0;const a=o(4),r=o(1),n=o(24),s=o(30),i=o(7),d=o(8),l=o(10),_=o(11),c=o(9),p=o(5),u=o(12);let v=class MessageModule{};t.MessageModule=v,t.MessageModule=v=a.__decorate([(0,r.Module)({imports:[u.SequelizeModule.forFeature([p.Message,_.Friend,i.Profile,d.Conversation,l.Account,c.UserConversation])],controllers:[n.MessageController],providers:[s.MessageService]})],v)},(e,t,o)=>{var a,r;Object.defineProperty(t,"__esModule",{value:!0}),t.MessageController=void 0;const n=o(4),s=o(1),i=o(16),d=o(17),l=o(25),_=o(30);let c=class MessageController{constructor(e){this.service=e}send(e){return s.Logger.log(`Message received from ${e.senderId}: ${e.content}`),this.service.send(e)}paging(e){return[]}delete(e){return[]}};t.MessageController=c,n.__decorate([(0,i.MessagePattern)(d.MESSAGE_PATTERN_CHAT.SEND_MESSAGE),n.__metadata("design:type",Function),n.__metadata("design:paramtypes",["function"==typeof(r=void 0!==l.CreateMessageDto&&l.CreateMessageDto)?r:Object]),n.__metadata("design:returntype",void 0)],c.prototype,"send",null),n.__decorate([(0,i.MessagePattern)(d.MESSAGE_PATTERN_CHAT.PAGING),n.__metadata("design:type",Function),n.__metadata("design:paramtypes",[Object]),n.__metadata("design:returntype",void 0)],c.prototype,"paging",null),n.__decorate([(0,i.MessagePattern)(d.MESSAGE_PATTERN_CHAT.DELETE),n.__metadata("design:type",Function),n.__metadata("design:paramtypes",[Object]),n.__metadata("design:returntype",void 0)],c.prototype,"delete",null),t.MessageController=c=n.__decorate([(0,s.Controller)(),n.__metadata("design:paramtypes",["function"==typeof(a=void 0!==_.MessageService&&_.MessageService)?a:Object])],c)},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});const a=o(4);a.__exportStar(o(26),t),a.__exportStar(o(27),t),a.__exportStar(o(28),t),a.__exportStar(o(29),t)},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DeleteMessageDto=void 0;t.DeleteMessageDto=class DeleteMessageDto{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PagingMessageDto=void 0;t.PagingMessageDto=class PagingMessageDto{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CreateMessageDtoWithReceiver=t.CreateMessageDto=void 0;t.CreateMessageDto=class CreateMessageDto{};t.CreateMessageDtoWithReceiver=class CreateMessageDtoWithReceiver{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InteractionMessageDto=void 0;t.InteractionMessageDto=class InteractionMessageDto{}},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MessageService=void 0;const a=o(4),r=o(1),n=o(5),s=o(8),i=o(7),d=o(12),l=o(31),_=o(32);let c=class MessageService{constructor(e,t,o){this.conversationModel=e,this.messageModel=t,this.profileModel=o}send(e){const{roomId:t,senderId:o,content:a}=e;return(0,l.from)(this.profileModel.findByPk(o)).pipe((0,_.switchMap)((e=>e?(0,l.from)(this.conversationModel.findByPk(t)).pipe((0,_.switchMap)((e=>e?(0,l.from)(this.messageModel.create({conversationId:t,senderId:o,content:a})).pipe((0,_.map)((e=>({data:e,message:"Send message successfully!"})))):(0,l.throwError)((()=>new r.NotFoundException(`Conversation with ID ${t} not found`)))))):(0,l.throwError)((()=>new r.NotFoundException(`Sender with ID ${o} not found`))))),(0,_.catchError)((e=>(0,l.throwError)((()=>e)))))}async getConversationsByProfileId(e){return await this.conversationModel.findAll({include:[{association:"members",where:{id:e},through:{attributes:[]}}]})}};t.MessageService=c,t.MessageService=c=a.__decorate([(0,r.Injectable)(),a.__param(0,(0,d.InjectModel)(s.Conversation)),a.__param(1,(0,d.InjectModel)(n.Message)),a.__param(2,(0,d.InjectModel)(i.Profile)),a.__metadata("design:paramtypes",[Object,Object,Object])],c)},e=>{e.exports=require("rxjs")},e=>{e.exports=require("rxjs/operators")},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ConversationModule=void 0;const a=o(4),r=o(1),n=o(34),s=o(36),i=o(7),d=o(8),l=o(10),_=o(11),c=o(9),p=o(5),u=o(12);let v=class ConversationModule{};t.ConversationModule=v,t.ConversationModule=v=a.__decorate([(0,r.Module)({imports:[u.SequelizeModule.forFeature([p.Message,_.Friend,i.Profile,d.Conversation,l.Account,c.UserConversation])],providers:[n.ConversationService],controllers:[s.ConversationController]})],v)},(e,t,o)=>{var a;Object.defineProperty(t,"__esModule",{value:!0}),t.ConversationService=void 0;const r=o(4),n=o(1),s=o(12),i=o(8),d=o(5),l=o(7),_=o(31),c=o(35),p=o(6);let u=class ConversationService{constructor(e,t,o,a){this.conversationModel=e,this.profileModel=t,this.sequelize=o,this.messageModel=a}createConversation(e){const{memberIds:t}=e;return 2!==t.length?(0,_.throwError)((()=>new n.BadRequestException("Conversations must be between exactly two members"))):(0,_.from)(this.profileModel.findAll({where:{id:t}})).pipe((0,_.switchMap)((e=>e.length!==t.length?(0,_.throwError)((()=>new n.NotFoundException("One or more members not found"))):(console.log("members: ",e),(0,_.from)(this.conversationModel.findAll({include:[{model:l.Profile,as:"members",where:{id:t},through:{attributes:[]}}]})).pipe((0,_.switchMap)((t=>(console.log("Found existingConversation",t),2==t.length?(0,_.of)({message:"Conversation already exists",data:t}):(0,_.from)(this.conversationModel.create({name:`Conversation between ${e.map((e=>e.fullName)).join(" and ")}`})).pipe((0,_.switchMap)((t=>(0,_.from)(t.$set("members",e)).pipe((0,_.map)((()=>({message:"Conversation created successfully",data:t})))))))))))))),(0,_.catchError)((e=>(0,_.throwError)((()=>e)))))}paging(e){const{offset:t,limit:o,keyword:a,profileId:r}=e,n=a?{name:{[c.Op.iLike]:`%${a}%`}}:{},s={association:"members",attributes:["id","fullName","avatarUrl"],where:r?{id:{[c.Op.in]:[r]}}:void 0,required:!!r};return(0,_.from)(this.conversationModel.findAndCountAll({where:n,include:[s],offset:t,limit:o,order:[["updatedAt","DESC"]]})).pipe((0,_.tap)((e=>{console.log("result.rows: ",e.rows)})),(0,_.map)((e=>({data:e.rows.map((e=>({id:e.id,name:e.name,isGroup:e.isGroup,members:e.members}))),total:e.count,message:"Conversations retrieved successfully"}))))}findMembersOfConversations(e){const{profileId:t}=e;return(0,_.from)(this.conversationModel.findAll({include:[{model:l.Profile,as:"members",attributes:["id","fullName","avatarUrl"],where:{id:t},through:{attributes:[]},required:!0}]})).pipe((0,_.switchMap)((e=>{if(!e.length)return(0,_.of)([]);const o=new Map,a=e.map((e=>{const t=e.toJSON();return o.set(t.id,{conversationId:t.id,memberId:t.members[0].id}),e.id}));return(0,_.from)(this.profileModel.findAll({include:[{model:i.Conversation,as:"conversations",attributes:["id","name"],where:{id:{[c.Op.in]:a}},through:{attributes:[]},required:!0}]})).pipe((0,_.map)((e=>e?.map?.((e=>{console.log("Each profile: ",e.toJSON());const a=e.conversations.find((e=>o.get(e.id)));return{lastMessage:{isSender:e.id==t,avatarUrl:e.avatarUrl,id:e.id,fullName:e.fullName,content:"",createdAt:(new Date).toISOString()},id:a.id,name:a.name,receiver:{id:e.id,avatarUrl:e.avatarUrl,bio:e.bio,fullName:e.fullName}}})))),(0,_.map)((e=>({data:e,message:"Paging successfully!"}))))})))}async delete(e){const t=await this.conversationModel.findByPk(e);if(!t)throw new n.NotFoundException("Conversation not found");return await t.destroy(),{message:"Conversation deleted successfully"}}fetchPaginatedMessages(e){const{offset:t,limit:o,keyword:a,conversationId:r}=e;if(!r)return(0,_.throwError)((()=>new n.NotFoundException("Conversation ID must be provided.")));const s={conversationId:r};return a&&(s.content={[c.Op.iLike]:`%${a}%`}),(0,_.from)(this.messageModel.findAndCountAll({where:s,order:[["createdAt","DESC"]],limit:o,offset:t})).pipe((0,_.map)((e=>{if(!e.rows.length)throw new n.NotFoundException(`No messages found for conversation ID ${r}.`);return{data:e.rows.reverse(),total:e.count,message:"Messages retrieved successfully."}})),(0,_.catchError)((e=>(0,_.throwError)((()=>e)))))}};t.ConversationService=u,t.ConversationService=u=r.__decorate([(0,n.Injectable)(),r.__param(0,(0,s.InjectModel)(i.Conversation)),r.__param(1,(0,s.InjectModel)(l.Profile)),r.__param(3,(0,s.InjectModel)(d.Message)),r.__metadata("design:paramtypes",[Object,Object,"function"==typeof(a=void 0!==p.Sequelize&&p.Sequelize)?a:Object,Object])],u)},e=>{e.exports=require("sequelize")},(e,t,o)=>{var a,r,n,s;Object.defineProperty(t,"__esModule",{value:!0}),t.ConversationController=void 0;const i=o(4),d=o(1),l=o(16),_=o(17),c=o(34),p=o(37),u=o(31),v=o(25);let m=class ConversationController{constructor(e){this.service=e}create(e){return this.service.createConversation(e)}delete(e){return(0,u.from)(this.service.delete(e))}findMembersOfConversations(e){return this.service.findMembersOfConversations(e)}pagingMessage(e){return this.service.fetchPaginatedMessages(e)}};t.ConversationController=m,i.__decorate([(0,l.MessagePattern)(_.MESSAGE_PATTERN_CONVERSATION.CREATE),i.__metadata("design:type",Function),i.__metadata("design:paramtypes",["function"==typeof(r=void 0!==p.CreateConversationDto&&p.CreateConversationDto)?r:Object]),i.__metadata("design:returntype",void 0)],m.prototype,"create",null),i.__decorate([(0,l.MessagePattern)(_.MESSAGE_PATTERN_CONVERSATION.DELETE),i.__metadata("design:type",Function),i.__metadata("design:paramtypes",[Number]),i.__metadata("design:returntype",void 0)],m.prototype,"delete",null),i.__decorate([(0,l.MessagePattern)(_.MESSAGE_PATTERN_CONVERSATION.PAGING),i.__metadata("design:type",Function),i.__metadata("design:paramtypes",["function"==typeof(n=void 0!==p.PagingConversationDto&&p.PagingConversationDto)?n:Object]),i.__metadata("design:returntype",void 0)],m.prototype,"findMembersOfConversations",null),i.__decorate([(0,l.MessagePattern)(_.MESSAGE_PATTERN_CONVERSATION.PAGING_MESSAGE),i.__metadata("design:type",Function),i.__metadata("design:paramtypes",["function"==typeof(s=void 0!==v.PagingMessageDto&&v.PagingMessageDto)?s:Object]),i.__metadata("design:returntype",void 0)],m.prototype,"pagingMessage",null),t.ConversationController=m=i.__decorate([(0,d.Controller)(),i.__metadata("design:paramtypes",["function"==typeof(a=void 0!==c.ConversationService&&c.ConversationService)?a:Object])],m)},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});const a=o(4);a.__exportStar(o(38),t),a.__exportStar(o(39),t),a.__exportStar(o(40),t),a.__exportStar(o(41),t)},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CreateConversationDto=void 0;t.CreateConversationDto=class CreateConversationDto{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PagingConversationDto=void 0;t.PagingConversationDto=class PagingConversationDto{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.JoinRoomDto=void 0;t.JoinRoomDto=class JoinRoomDto{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LeaveRoomDto=void 0;t.LeaveRoomDto=class LeaveRoomDto{}}],t={};function o(a){var r=t[a];if(void 0!==r)return r.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,o),n.exports}var a={};(()=>{var e=a;Object.defineProperty(e,"__esModule",{value:!0});const t=o(1),r=o(2),n=o(3),s=o(16);!async function(){const e=await r.NestFactory.createMicroservice(n.AppModule,{transport:s.Transport.NATS,options:{servers:[process.env.NATS_URL]}});await e.listen(),t.Logger.log("Chat Microservice is Running!")}()})()})();
//# sourceMappingURL=main.js.map