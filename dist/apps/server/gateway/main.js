(()=>{"use strict";var e=[,e=>{e.exports=require("@nestjs/common")},e=>{e.exports=require("@nestjs/core")},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AppModule=void 0;const r=o(4),n=o(1),s=o(5),a=o(20),i=o(39),_=o(45);let d=class AppModule{};t.AppModule=d,t.AppModule=d=r.__decorate([(0,n.Module)({imports:[s.AuthModule,a.ChatModule,i.ProfileModule,_.ConversationModule],controllers:[],providers:[]})],d)},e=>{e.exports=require("tslib")},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AuthModule=void 0;const r=o(4),n=o(1),s=o(6),a=o(18);let i=class AuthModule{};t.AuthModule=i,t.AuthModule=i=r.__decorate([(0,n.Module)({providers:[],controllers:[s.AuthController],imports:[a.NatsClientModule]})],i)},(e,t,o)=>{var r,n,s;Object.defineProperty(t,"__esModule",{value:!0}),t.AuthController=void 0;const a=o(4),i=o(1),_=o(7),d=o(8),c=o(9),l=o(15);let E=class AuthController{constructor(e){this.natsClient=e}createUser(e){return this.natsClient.send({cmd:c.MESSAGE_PATTERN_AUTH.CREATE},e).pipe((0,d.catchError)((e=>(i.Logger.error("Get Action: CREATE_ACCOUNT error!!"),e))),(0,d.tap)((e=>{i.Logger.log("Get Action: CREATE_ACCOUNT successfully!!",e)})))}signIn(e){return this.natsClient.send({cmd:c.MESSAGE_PATTERN_AUTH.SIGN_IN},e).pipe((0,d.catchError)((e=>(i.Logger.error("Get Action: CREATE_ACCOUNT error!!"),e))),(0,d.tap)((e=>{i.Logger.log("Get Action: CREATE_ACCOUNT successfully!!",e)})))}};t.AuthController=E,a.__decorate([(0,i.Post)("registation"),a.__param(0,(0,i.Body)()),a.__metadata("design:type",Function),a.__metadata("design:paramtypes",["function"==typeof(n=void 0!==l.CreateAccountDto&&l.CreateAccountDto)?n:Object]),a.__metadata("design:returntype",void 0)],E.prototype,"createUser",null),a.__decorate([(0,i.Post)("authenticate"),a.__param(0,(0,i.Body)()),a.__metadata("design:type",Function),a.__metadata("design:paramtypes",["function"==typeof(s=void 0!==l.CreateAccountDto&&l.CreateAccountDto)?s:Object]),a.__metadata("design:returntype",void 0)],E.prototype,"signIn",null),t.AuthController=E=a.__decorate([(0,i.Controller)("auth"),a.__param(0,(0,i.Inject)("NATS_SERVICE")),a.__metadata("design:paramtypes",["function"==typeof(r=void 0!==_.ClientProxy&&_.ClientProxy)?r:Object])],E)},e=>{e.exports=require("@nestjs/microservices")},e=>{e.exports=require("rxjs")},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=o(4);r.__exportStar(o(10),t),r.__exportStar(o(13),t),r.__exportStar(o(12),t)},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});o(4).__exportStar(o(11),t)},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MESSAGE_PATTERN_PROFILE=t.MESSAGE_PATTERN_AUTH=void 0;const r=o(12),n=Object.freeze({AUTH:`${r.MICRO_SERVICE_NAMES.AUTH_SERVICE}/AUTH_MODULE`,PROFILE:`${r.MICRO_SERVICE_NAMES.AUTH_SERVICE}/PROFILE_MODULE`});t.MESSAGE_PATTERN_AUTH=Object.freeze({CREATE:`${n.AUTH}/create`,UPDATE:`${n.AUTH}/update`,DELETE:`${n.AUTH}/delete`,SIGN_IN:`${n.AUTH}/sign-in`,REFRESH_TOKEN:`${n.AUTH}/refresh-token`}),t.MESSAGE_PATTERN_PROFILE=Object.freeze({UPDATE:`${n.PROFILE}/update`,ADD_FRIEND:`${n.PROFILE}/add-friend`,SEARCH_FRIEND:`${n.PROFILE}/search-friend`,GET_USER_FRIENDS:`${n.PROFILE}/get-user-friend`})},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MICRO_SERVICE_NAMES=void 0,t.MICRO_SERVICE_NAMES=Object.freeze({AUTH_SERVICE:"AUTH_SERVICE",CHAT_SERVICE:"CHAT_SERVICE"})},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});o(4).__exportStar(o(14),t)},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MESSAGE_PATTERN_CHANNEL=t.MESSAGE_PATTERN_CONVERSATION=t.MESSAGE_PATTERN_CHAT=void 0;const r=o(12),n=Object.freeze({CHAT:`${r.MICRO_SERVICE_NAMES.CHAT_SERVICE}/CHAT_MODULE`,CHANNEL:`${r.MICRO_SERVICE_NAMES.CHAT_SERVICE}/CHANNEL_MODULE`,CONVERSATION:`${r.MICRO_SERVICE_NAMES.CHAT_SERVICE}/CONVERSATION_MODULE`});t.MESSAGE_PATTERN_CHAT=Object.freeze({SEND_MESSAGE:`${n.CHAT}/send-message`,DELETE:`${n.CHAT}/delete`,PAGING:`${n.CHAT}/paging`,INTERACTION:`${n.CHAT}/interaction`}),t.MESSAGE_PATTERN_CONVERSATION=Object.freeze({CREATE:`${n.CONVERSATION}/create`,DELETE:`${n.CONVERSATION}/delete`,PAGING:`${n.CONVERSATION}/paging`,PAGING_MESSAGE:`${n.CONVERSATION}/pagingMessage`}),t.MESSAGE_PATTERN_CHANNEL=Object.freeze({CREATE:`${n.CHANNEL}/create`,JOIN:`${n.CHANNEL}/join`,LEAVE:`${n.CHANNEL}/leave`})},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=o(4);r.__exportStar(o(16),t),r.__exportStar(o(17),t)},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CreateAccountDto=void 0;t.CreateAccountDto=class CreateAccountDto{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SignInAccountDto=void 0;t.SignInAccountDto=class SignInAccountDto{}},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});o(4).__exportStar(o(19),t)},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NatsClientModule=void 0;const r=o(4),n=o(1),s=o(7);let a=class NatsClientModule{};t.NatsClientModule=a,t.NatsClientModule=a=r.__decorate([(0,n.Module)({imports:[s.ClientsModule.register([{name:"NATS_SERVICE",transport:s.Transport.NATS,options:{servers:[process.env.NATS_URL]}}])],exports:[s.ClientsModule.register([{name:"NATS_SERVICE",transport:s.Transport.NATS,options:{servers:[process.env.NATS_URL]}}])]})],a)},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ChatModule=void 0;const r=o(4),n=o(1),s=o(21),a=o(18);let i=class ChatModule{};t.ChatModule=i,t.ChatModule=i=r.__decorate([(0,n.Module)({imports:[a.NatsClientModule],providers:[s.ChatGateway]})],i)},(e,t,o)=>{var r,n,s,a,i,_,d,c,l,E,S;Object.defineProperty(t,"__esModule",{value:!0}),t.ChatGateway=void 0;const u=o(4),p=o(1),C=o(22),O=o(23),A=o(24),T=o(7),N=o(9),R=o(8),g=o(28),M=o(33),I=o(38);let v=class ChatGateway{constructor(e){this.natsClient=e,this.userChatRooms=new Map,this.roomsMaps=new Map,this.conversationRooms=new Map,this.usersOnline=new Map}handleConnection(e){p.Logger.log(`Socket --- Client connected: ${e.id}`),this.userChatRooms.set(e.id,[])}handleDisconnect(e){p.Logger.log(`Socket --- Client disconnected: ${e.id}`),this.userChatRooms.delete(e.id),Array.from(this.usersOnline).forEach((t=>{t[1].clientId==e.id&&(this.usersOnline.delete(t[1].userId),this.removeClientFromConversationRoom(e,A.SOCKET_CONVERSATION_PATTERN.CONVERSATION_ROOM),p.Logger.log(`Socket --- User Ofline: ${t[1].userId}`))})),p.Logger.log(`Socket --- number user online: ${this.usersOnline.size}`),p.Logger.log(`Socket --- number roomsMaps: ${this.roomsMaps.size}`)}handleUserOnline(e,t){p.Logger.log(`Socket --- User Online: ${t}`),this.usersOnline.set(t,{userId:t,clientId:e.id}),this.addClientToConversationRoom(e,A.SOCKET_CONVERSATION_PATTERN.CONVERSATION_ROOM+"__"+t)}handleJoinRoom(e,{roomId:t}){p.Logger.log(`Socket --- Client ${e.id} joining room: ${t}`),e.join(t);const o=this.userChatRooms.get(e.id)||[];this.userChatRooms.set(e.id,[...o,t]),e.to(t).emit(A.SOCKET_CONVERSATION_PATTERN.USER_JOINED,{roomId:t}),this.addClientToChatRoom(e,t)}handleLeaveRoom(e,{roomId:t}){e.leave(t);const o=this.userChatRooms.get(e.id)||[];this.userChatRooms.set(e.id,o.filter((e=>e!==t))),e.to(t).emit(A.SOCKET_CONVERSATION_PATTERN.USER_LEFT,{roomId:t}),this.removeClientFromChatRoom(e,t),p.Logger.log(`Socket --- Client ${e.id} leaving room: ${t}`)}handleSendMessage(e,t){t.receiverIds?.length>1?this.handleSendGroupMessage(t):this.handleSendPersonalMessage(e,t)}handleInteractMessage(e,{roomId:t,interactionKey:o,senderId:r}){p.Logger.log(`Socket --- Interaction from ${e.id} to room ${t}: ${o}`);const n={roomId:t,interactionKey:o,senderId:r,clientId:e.id};this.natsClient.emit(N.MESSAGE_PATTERN_CHAT.INTERACTION,{}).pipe((0,R.catchError)((e=>(this.server.to(t).emit(A.SOCKET_CHAT_PATTERN.SEND_INTERACTION_FAIL,n),R.EMPTY))),(0,R.tap)((e=>{this.server.to(t).emit(A.SOCKET_CHAT_PATTERN.NEW_INTERACTION,n)}))).subscribe()}handleSendPersonalMessage(e,t){const o=t.receiverIds[0];switch(p.Logger.log(`Socket --- Message from ${e.id} to room ${t.roomId}: ${t.content} -- receiver: ${o}`),this.checkReceiverStatus(o,t.roomId)){case I.UserConnectionStatus.ONLINE:this.handleSendMessageOnline(t);break;case I.UserConnectionStatus.OFFLINE:this.handleSendMessageUserOffline(t),p.Logger.warn("Socket --- Send Message To User Offline....: ");break;case I.RoomConnectionStatus.RECEIVER_OFF_ROOM:this.handleSendMessageUserOffRoom(t),p.Logger.warn("Socket --- Send message but user has off room!!: ")}}handleSendMessageOnline(e){console.log("handleSendMessageOnline"),this.natsClient.emit(N.MESSAGE_PATTERN_CHAT.SEND_MESSAGE,e).pipe((0,R.catchError)((t=>(this.server.to(e.roomId).emit(A.SOCKET_CHAT_PATTERN.SEND_MESSAGE_FAIL,e),R.EMPTY))),(0,R.tap)((()=>{this.server.to(e.roomId).emit(A.SOCKET_CHAT_PATTERN.NEW_MESSAGE,{...e,content:e.content})}))).subscribe()}handleSendMessageUserOffline(e){console.log("handleSendMessageUserOffline")}handleSendMessageUserOffRoom(e){this.natsClient.emit(N.MESSAGE_PATTERN_CHAT.SEND_MESSAGE,e).pipe((0,R.catchError)((t=>(this.server.to(e.roomId).emit(A.SOCKET_CHAT_PATTERN.SEND_MESSAGE_FAIL,e),R.EMPTY))),(0,R.tap)((()=>{const t=A.SOCKET_CONVERSATION_PATTERN.CONVERSATION_ROOM+"__"+e.receiverIds[0];this.server.emit(t,{content:e.content,conversationId:e.roomId,senderId:e.senderId,receiverId:e.receiverIds[0],unread:!0,createdAt:(new Date).toISOString()})}))).subscribe()}handleSendGroupMessage(e){console.log("handleSendGroupMessage: ",e)}isUserOnline(e){return!!this.usersOnline.get(e)}addClientToChatRoom(e,t){if(this.roomsMaps.has(t)){const o=[...this.roomsMaps.get(t),e.id];this.roomsMaps.set(t,o)}else this.roomsMaps.set(t,[e.id])}removeClientFromChatRoom(e,t){if(!this.roomsMaps.has(t))return;console.log("Current Client: ",e.id);const o=this.roomsMaps.get(t).filter((t=>t!==e.id));console.log("clientIds: ",o),this.roomsMaps.set(t,o),console.log("removeClientFromChatRoom: ",this.roomsMaps.entries())}addClientToConversationRoom(e,t){if(this.conversationRooms.has(t)){const o=[...this.conversationRooms.get(t),e.id];this.conversationRooms.set(t,o)}else this.conversationRooms.set(t,[e.id]);p.Logger.log(`Socket --- ADD User Conversation ROOM: ${t}`)}removeClientFromConversationRoom(e,t){if(!this.conversationRooms.has(t))return;p.Logger.log(`Socket --- Remove User Conversation ROOM: ${t}`);const o=this.conversationRooms.get(t).filter((t=>t!==e.id));this.conversationRooms.set(t,o)}checkReceiverStatus(e,t){const o=this.isUserOnline(e),r=this.roomsMaps.get(t)?.length,n=1==r;return console.log("lengthOfRoom: ",r),console.log("isOnl: ",o),console.log("isRoomOnlyClient: ",n),o?n?I.RoomConnectionStatus.RECEIVER_OFF_ROOM:o&&I.UserConnectionStatus.ONLINE:I.UserConnectionStatus.OFFLINE}};t.ChatGateway=v,u.__decorate([(0,C.WebSocketServer)(),u.__metadata("design:type","function"==typeof(n=void 0!==O.Server&&O.Server)?n:Object)],v.prototype,"server",void 0),u.__decorate([(0,C.SubscribeMessage)(A.SOCKET_CONVERSATION_PATTERN.ONLINE),u.__metadata("design:type",Function),u.__metadata("design:paramtypes",["function"==typeof(s=void 0!==O.Socket&&O.Socket)?s:Object,Number]),u.__metadata("design:returntype",void 0)],v.prototype,"handleUserOnline",null),u.__decorate([(0,C.SubscribeMessage)(A.SOCKET_CONVERSATION_PATTERN.JOIN_ROOM),u.__metadata("design:type",Function),u.__metadata("design:paramtypes",["function"==typeof(a=void 0!==O.Socket&&O.Socket)?a:Object,"function"==typeof(i=void 0!==M.JoinRoomDto&&M.JoinRoomDto)?i:Object]),u.__metadata("design:returntype",void 0)],v.prototype,"handleJoinRoom",null),u.__decorate([(0,C.SubscribeMessage)(A.SOCKET_CONVERSATION_PATTERN.LEAVE_ROOM),u.__metadata("design:type",Function),u.__metadata("design:paramtypes",["function"==typeof(_=void 0!==O.Socket&&O.Socket)?_:Object,"function"==typeof(d=void 0!==M.LeaveRoomDto&&M.LeaveRoomDto)?d:Object]),u.__metadata("design:returntype",void 0)],v.prototype,"handleLeaveRoom",null),u.__decorate([(0,C.SubscribeMessage)(A.SOCKET_CHAT_PATTERN.SEND_MESSAGE),u.__metadata("design:type",Function),u.__metadata("design:paramtypes",["function"==typeof(c=void 0!==O.Socket&&O.Socket)?c:Object,"function"==typeof(l=void 0!==g.CreateMessageDtoWithReceiver&&g.CreateMessageDtoWithReceiver)?l:Object]),u.__metadata("design:returntype",void 0)],v.prototype,"handleSendMessage",null),u.__decorate([(0,C.SubscribeMessage)(A.SOCKET_CHAT_PATTERN.SEND_INTERACTION),u.__metadata("design:type",Function),u.__metadata("design:paramtypes",["function"==typeof(E=void 0!==O.Socket&&O.Socket)?E:Object,"function"==typeof(S=void 0!==g.InteractionMessageDto&&g.InteractionMessageDto)?S:Object]),u.__metadata("design:returntype",void 0)],v.prototype,"handleInteractMessage",null),t.ChatGateway=v=u.__decorate([(0,C.WebSocketGateway)(),u.__param(0,(0,p.Inject)("NATS_SERVICE")),u.__metadata("design:paramtypes",["function"==typeof(r=void 0!==T.ClientProxy&&T.ClientProxy)?r:Object])],v)},e=>{e.exports=require("@nestjs/websockets")},e=>{e.exports=require("socket.io")},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=o(4);r.__exportStar(o(25),t),r.__exportStar(o(26),t),r.__exportStar(o(27),t)},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SOCKET_CHAT_PATTERN=void 0,t.SOCKET_CHAT_PATTERN=Object.freeze({SEND_MESSAGE:"SEND_MESSAGE",SEND_MESSAGE_FAIL:"SEND_MESSAGE_FAIL",NEW_MESSAGE:"NEW_MESSAGE",SEND_INTERACTION:"SEND_INTERACTION",SEND_INTERACTION_FAIL:"SEND_INTERACTION_FAIL",NEW_INTERACTION:"NEW_INTERACTION",NEW_LAST_MESSAGE:"NEW_LAST_MESSAGE"})},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SOCKET_CONVERSATION_PATTERN=void 0,t.SOCKET_CONVERSATION_PATTERN=Object.freeze({ONLINE:"ONLINE",INIT_CONVERSATION:"INIT_CONVERSATION",DESTROY_CONVERSATION:"DESTROY_CONVERSATION",JOIN_ROOM:"JOIN_ROOM",USER_JOINED:"USER_JOINED",LEAVE_ROOM:"LEAVE_ROOM",USER_LEFT:"USER_LEFT",NEW_CONVERSATION:"NEW_CONVERSATION",CONVERSATION_ROOM:"CONVERSATION_ROOM"})},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SOCKET_NOTIFICATION_PATTERN=void 0,t.SOCKET_NOTIFICATION_PATTERN=Object.freeze({NEW_FRIEND:"NEW_FRIEND",NEW_MESSAGE_INTERACTION:"NEW_MESSAGE_INTERACTION"})},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=o(4);r.__exportStar(o(29),t),r.__exportStar(o(30),t),r.__exportStar(o(31),t),r.__exportStar(o(32),t)},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DeleteMessageDto=void 0;t.DeleteMessageDto=class DeleteMessageDto{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PagingMessageDto=void 0;t.PagingMessageDto=class PagingMessageDto{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CreateMessageDtoWithReceiver=t.CreateMessageDto=void 0;t.CreateMessageDto=class CreateMessageDto{};t.CreateMessageDtoWithReceiver=class CreateMessageDtoWithReceiver{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InteractionMessageDto=void 0;t.InteractionMessageDto=class InteractionMessageDto{}},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=o(4);r.__exportStar(o(34),t),r.__exportStar(o(35),t),r.__exportStar(o(36),t),r.__exportStar(o(37),t)},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CreateConversationDto=void 0;t.CreateConversationDto=class CreateConversationDto{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PagingConversationDto=void 0;t.PagingConversationDto=class PagingConversationDto{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.JoinRoomDto=void 0;t.JoinRoomDto=class JoinRoomDto{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LeaveRoomDto=void 0;t.LeaveRoomDto=class LeaveRoomDto{}},(e,t)=>{var o,r;Object.defineProperty(t,"__esModule",{value:!0}),t.RoomConnectionStatus=t.UserConnectionStatus=void 0,function(e){e.ONLINE="ONLINE",e.OFFLINE="OFFLINE"}(o||(t.UserConnectionStatus=o={})),function(e){e.EMPTY="EMPTY",e.RECEIVER_OFF_ROOM="RECEIVER_OFF_ROOM"}(r||(t.RoomConnectionStatus=r={}))},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ProfileModule=void 0;const r=o(4),n=o(1),s=o(40),a=o(18);let i=class ProfileModule{};t.ProfileModule=i,t.ProfileModule=i=r.__decorate([(0,n.Module)({providers:[],controllers:[s.ProfileController],imports:[a.NatsClientModule]})],i)},(e,t,o)=>{var r,n,s,a;Object.defineProperty(t,"__esModule",{value:!0}),t.ProfileController=void 0;const i=o(4),_=o(1),d=o(7),c=o(8),l=o(9),E=o(41);let S=class ProfileController{constructor(e){this.natsClient=e}updateProfile(e){return this.natsClient.send({cmd:l.MESSAGE_PATTERN_PROFILE.UPDATE},e).pipe((0,c.catchError)((e=>(_.Logger.error("Get Action: UPDATE_PROFILE error!!"),e))),(0,c.tap)((e=>{_.Logger.log("Get Action: UPDATE_PROFILE successfully!!",e)})))}addFriend(e){return this.natsClient.send({cmd:l.MESSAGE_PATTERN_PROFILE.ADD_FRIEND},e).pipe((0,c.catchError)((e=>(_.Logger.error("Get Action: ADD_FRIEND error!!"),e))),(0,c.tap)((e=>{_.Logger.log("Get Action: ADD_FRIEND successfully!!",e)})))}searchFriend(e){return this.natsClient.send({cmd:l.MESSAGE_PATTERN_PROFILE.SEARCH_FRIEND},e).pipe((0,c.catchError)((e=>(_.Logger.error("Get Action: SEARCH_FRIEND error!!"),e))),(0,c.tap)((e=>{_.Logger.log("Get Action: SEARCH_FRIEND successfully!!",e)})))}getUserFriends(e){return this.natsClient.send({cmd:l.MESSAGE_PATTERN_PROFILE.GET_USER_FRIENDS},e.id).pipe((0,c.catchError)((e=>(_.Logger.error("Get Action: GET_USER_FRIENDS error!!"),e))),(0,c.tap)((e=>{_.Logger.log("Get Action: GET_USER_FRIENDS successfully!!",e)})))}};t.ProfileController=S,i.__decorate([(0,_.Post)(),i.__param(0,(0,_.Body)()),i.__metadata("design:type",Function),i.__metadata("design:paramtypes",["function"==typeof(n=void 0!==E.UpdateProfileDto&&E.UpdateProfileDto)?n:Object]),i.__metadata("design:returntype",void 0)],S.prototype,"updateProfile",null),i.__decorate([(0,_.Post)("/add-friend"),i.__param(0,(0,_.Body)()),i.__metadata("design:type",Function),i.__metadata("design:paramtypes",["function"==typeof(s=void 0!==E.AddFriendDto&&E.AddFriendDto)?s:Object]),i.__metadata("design:returntype",void 0)],S.prototype,"addFriend",null),i.__decorate([(0,_.Post)("/search-friend"),i.__param(0,(0,_.Body)()),i.__metadata("design:type",Function),i.__metadata("design:paramtypes",["function"==typeof(a=void 0!==E.SearchFriendDto&&E.SearchFriendDto)?a:Object]),i.__metadata("design:returntype",void 0)],S.prototype,"searchFriend",null),i.__decorate([(0,_.Get)("/user-friend/:id"),i.__param(0,(0,_.Param)()),i.__metadata("design:type",Function),i.__metadata("design:paramtypes",[Object]),i.__metadata("design:returntype",void 0)],S.prototype,"getUserFriends",null),t.ProfileController=S=i.__decorate([(0,_.Controller)("profile"),i.__param(0,(0,_.Inject)("NATS_SERVICE")),i.__metadata("design:paramtypes",["function"==typeof(r=void 0!==d.ClientProxy&&d.ClientProxy)?r:Object])],S)},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=o(4);r.__exportStar(o(42),t),r.__exportStar(o(43),t),r.__exportStar(o(44),t)},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UpdateProfileDto=void 0;t.UpdateProfileDto=class UpdateProfileDto{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AddFriendDto=void 0;t.AddFriendDto=class AddFriendDto{}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SearchFriendDto=void 0;t.SearchFriendDto=class SearchFriendDto{}},(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ConversationModule=void 0;const r=o(4),n=o(1),s=o(18),a=o(46);let i=class ConversationModule{};t.ConversationModule=i,t.ConversationModule=i=r.__decorate([(0,n.Module)({imports:[s.NatsClientModule],controllers:[a.ConversationController]})],i)},(e,t,o)=>{var r,n,s,a;Object.defineProperty(t,"__esModule",{value:!0}),t.ConversationController=void 0;const i=o(4),_=o(1),d=o(7),c=o(33),l=o(28),E=o(9);let S=class ConversationController{constructor(e){this.clientProxy=e}create(e){return this.clientProxy.send(E.MESSAGE_PATTERN_CONVERSATION.CREATE,e)}paging(e){return this.clientProxy.send(E.MESSAGE_PATTERN_CONVERSATION.PAGING,e)}pagingMessage(e){return this.clientProxy.send(E.MESSAGE_PATTERN_CONVERSATION.PAGING_MESSAGE,e)}};t.ConversationController=S,i.__decorate([(0,_.Post)("create"),i.__param(0,(0,_.Body)()),i.__metadata("design:type",Function),i.__metadata("design:paramtypes",["function"==typeof(n=void 0!==c.CreateConversationDto&&c.CreateConversationDto)?n:Object]),i.__metadata("design:returntype",void 0)],S.prototype,"create",null),i.__decorate([(0,_.Post)("search"),i.__param(0,(0,_.Body)()),i.__metadata("design:type",Function),i.__metadata("design:paramtypes",["function"==typeof(s=void 0!==c.PagingConversationDto&&c.PagingConversationDto)?s:Object]),i.__metadata("design:returntype",void 0)],S.prototype,"paging",null),i.__decorate([(0,_.Post)("pagingMessage"),i.__param(0,(0,_.Body)()),i.__metadata("design:type",Function),i.__metadata("design:paramtypes",["function"==typeof(a=void 0!==l.PagingMessageDto&&l.PagingMessageDto)?a:Object]),i.__metadata("design:returntype",void 0)],S.prototype,"pagingMessage",null),t.ConversationController=S=i.__decorate([(0,_.Controller)("conversation"),i.__param(0,(0,_.Inject)("NATS_SERVICE")),i.__metadata("design:paramtypes",["function"==typeof(r=void 0!==d.ClientProxy&&d.ClientProxy)?r:Object])],S)}],t={};function o(r){var n=t[r];if(void 0!==n)return n.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,o),s.exports}var r={};(()=>{var e=r;Object.defineProperty(e,"__esModule",{value:!0});const t=o(1),n=o(2),s=o(3);!async function(){const e=await n.NestFactory.create(s.AppModule);e.setGlobalPrefix("");const o=process.env.GATEWAY_PORT;e.enableCors(),await e.listen(o),t.Logger.log(`\ud83d\ude80 Application is running on: http://localhost:${o}/`)}()})()})();
//# sourceMappingURL=main.js.map